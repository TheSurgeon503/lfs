<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-zstd" role="wrap">
  <?dbhtml filename="zstd.html"?>

  <sect1info condition="script">
    <productname>zstd</productname>
    <productnumber>&zstd-version;</productnumber>
    <address>&zstd-url;</address>
  </sect1info>

  <title>Zstd-&zstd-version;</title>

  <indexterm zone="ch-system-zstd">
    <primary sortas="a-zstd">zstd</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Zstandard is a real-time compression algorithm, providing high
    compression ratios. It offers a very wide range of compression / speed
    trade-offs, while being backed by a very fast decoder.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&zstd-fin-sbu;</seg>
        <seg>&zstd-fin-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Zstd</title>

    <para>Compile the package:</para>

<screen><userinput remap="make">make prefix=/usr</userinput></screen>

    <note>
       <para>In the test output there are several places that
       indicate 'failed'. These are expected and only 'FAIL' is an actual
       test failure. There should be no test failures.</para>
    </note>

    <para>To test the results, issue:</para>

<screen><userinput remap="test">make check</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make prefix=/usr install</userinput></screen>

    <para>Remove the static library:</para>
<screen><userinput remap="install">rm -v /usr/lib/libzstd.a</userinput></screen>

  </sect2>

  <!-- - - - - - - - - - -->
  <!-- Multilib - 32bit  -->
  <!-- - - - - - - - - - -->
  
  <sect2 arch="ml_32,ml_all" role="installation">
    <title>Installation of Zstd - 32bit</title>

    <para>Clean previous build:</para>

<screen><userinput remap="pre">make clean</userinput></screen>

    <para>Compile the package:</para>

<screen><userinput remap="make">CC="gcc -m32" make prefix=/usr</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make prefix=/usr DESTDIR=$PWD/DESTDIR install
cp -Rv DESTDIR/usr/lib/* /usr/lib32/
sed -e "/^libdir/s/lib$/lib32/" -i /usr/lib32/pkgconfig/libzstd.pc
rm -rf DESTDIR</userinput></screen>

  </sect2><!-- m32 -->

  <!-- - - - - - - - - - -->
  <!-- Multilib - x32bit -->
  <!-- - - - - - - - - - -->
  
  <sect2 arch="ml_x32,ml_all" role="installation">
    <title>Installation of Zstd - x32bit</title>

    <para>Clean previous build:</para>

<screen><userinput remap="pre">make clean</userinput></screen>

    <para>Compile the package:</para>

<screen><userinput remap="make">CC="gcc -mx32" make prefix=/usr</userinput></screen>

    <para>Install the package:</para>

<screen><userinput remap="install">make prefix=/usr DESTDIR=$PWD/DESTDIR install
cp -Rv DESTDIR/usr/lib/* /usr/libx32/
sed -e "/^libdir/s/lib$/libx32/" -i /usr/libx32/pkgconfig/libzstd.pc
rm -rf DESTDIR</userinput></screen>

  </sect2><!-- mx32 -->

  <sect2 id="contents-zstd" role="content">
    <title>Contents of Zstd</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>
      <segtitle>Installed library</segtitle>

      <seglistitem>
        <seg>zstd,
             zstdcat (link to zstd),
             zstdgrep,
             zstdless,
             zstdmt (link to zstd), and
             unzstd (link to zstd)
        </seg>

        <seg>libzstd.so</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="zstd">
        <term><command>zstd</command></term>
        <listitem>
          <para>Compresses or decompresses files using the ZSTD format</para>
          <indexterm zone="ch-system-zstd zstd">
            <primary sortas="b-zstd">zstd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zstdgrep">
        <term><command>zstdgrep</command></term>
        <listitem>
          <para>Runs <command>grep</command> on ZSTD compressed files</para>
          <indexterm zone="ch-system-zstd zstdgrep">
            <primary sortas="b-zstdgrep">zstdgrep</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="zstdless">
        <term><command>zstdless</command></term>
        <listitem>
          <para>Runs <command>less</command> on ZSTD compressed files</para>
          <indexterm zone="ch-system-zstd zstdless">
            <primary sortas="b-zstdless">zstdless</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libzstd">
        <term><filename class="libraryfile">libzstd</filename></term>
        <listitem>
          <para>The library implementing lossless data
          compression, using the ZSTD algorithm</para>
          <indexterm zone="ch-system-zstd libzstd">
            <primary sortas="c-libzstd">libzstd</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
